name: Publish Extension

on:
  release:
    types: [created]

jobs:
  publish:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: xvfb-run -a npm test

      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=$(echo ${GITHUB_REF#refs/tags/v})" >> $GITHUB_OUTPUT

      - name: Update version in package.json
        run: |
          npm version ${{ steps.extract_version.outputs.VERSION }} --no-git-tag-version --allow-same-version

      - name: Get release details
        id: get_release
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const tagName = context.ref.replace('refs/tags/', '');
            const release = await github.rest.repos.getReleaseByTag({
              owner,
              repo,
              tag: tagName
            });
            return {
              body: release.data.body || '',
              name: release.data.name || tagName
            };

      - name: Update CHANGELOG.md
        run: |
          version="${{ steps.extract_version.outputs.VERSION }}"
          release_date=$(date +"%Y-%m-%d")
          release_name="${{ fromJSON(steps.get_release.outputs.result).name }}"
          release_body="${{ fromJSON(steps.get_release.outputs.result).body }}"

          # Create the new version entry
          new_entry="## [${version}] - ${release_date}\n\n${release_body}\n\n"

          # Insert the new entry below the ## [Unreleased] line
          sed -i "/## \[Unreleased\]/a\\
          ${new_entry}" CHANGELOG.md

          echo "Updated CHANGELOG.md with version ${version} release notes"

          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add CHANGELOG.md
          git commit -m "Update CHANGELOG.md with ${version} release notes [skip ci]"
          git push origin main

      - name: Build extension
        run: npm run package

      - name: Install VSCE
        run: npm install -g @vscode/vsce

      - name: Publish to Visual Studio Marketplace
        run: vsce publish -p ${{ secrets.VSCE_PAT }}
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
